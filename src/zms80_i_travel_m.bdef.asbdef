managed implementation in class zcl_bp_ms80_i_travel_m unique;
strict ( 2 );

define behavior for ZMS80_I_TRAVEL_M alias Travel
implementation in class zcl_bp_ms80_i_travel_m unique
persistent table zms80_travel_m
with additional save
lock master
authorization master ( instance )
etag master LastChangedAt
early numbering
{
  field ( readonly ) TravelId, LastChangedBy, LastChangedAt, CreatedBy, CreatedAt;
  field ( mandatory ) AgencyId, CustomerId, BeginDate, EndDate, OverallStatus, BookingFee, CurrencyCode;
  action ( features : instance ) acceptTravel result [1] $self;
  action ( features : instance ) rejectTravel result [1] $self;

  factory action copyTravel [1];

  internal action recalcTotPrice;

  validation validateCustomer on save { create; field CustomerId; }
  validation ValidateDates on save { create; field BeginDate, EndDate; }
  validation ValidateStatus on save { create; field OverallStatus; }
  validation ValidateCurrencyCode on save { create; field CurrencyCode; }
  validation ValidateBookingFee on save { create; field BookingFee; }

  determination calculateTotalPrice on modify { create; field BookingFee, CurrencyCode; }

  create ( authorization : global );
  update;
  delete;
  association _booking { create ( features : instance ); }
  mapping for zms80_travel_m
    {
      TravelId      = travel_id;
      AgencyId      = agency_id;
      CustomerId    = customer_id;
      BeginDate     = begin_date;
      EndDate       = end_date;
      BookingFee    = booking_fee;
      TotalPrice    = total_price;
      CurrencyCode  = currency_code;
      Description   = description;
      OverallStatus = overall_status;
      CreatedBy     = created_by;
      CreatedAt     = created_at;
      LastChangedAt = last_changed_at;
      LastChangedBy = last_changed_by;
    }

}

define behavior for ZMS80_I_BOOKING_M alias Booking
implementation in class zcl_bp_ms80_i_Booking_m unique
persistent table zms80_booking_m
lock dependent by _Travel
authorization dependent by _Travel
etag master LastChangedAt
early numbering
{
  update;
  delete;
  field ( readonly ) TravelId, BookingId, LastChangedAt;
  field ( mandatory ) CarrierId, ConnectionId, FlightDate, BookingStatus;
  field ( mandatory : create, readonly : update ) BookingDate, CustomerId;

  validation ValidateStatus on save { create; field BookingStatus; }
  validation ValidateCustomer on save { create; field CustomerId; }
  validation ValidateCurrencyCode on save { create; field CurrencyCode; }
  validation ValidateConnection on save { create; field CarrierId, ConnectionId, FlightDate; }
  validation ValidateFlightPrice on save { create; field FlightPrice; }

  determination calculateTotalPrice on modify { create; field FlightPrice; }

  association _Travel;
  association _BookSupl { create ( features : instance ); }
  mapping for zms80_booking_m
    {
      TravelId      = travel_id;
      BookingId     = booking_id;
      BookingDate   = booking_date;
      CustomerId    = customer_id;
      CarrierId     = carrier_id;
      ConnectionId  = connection_id;
      FlightDate    = flight_date;
      FlightPrice   = flight_price;
      CurrencyCode  = currency_code;
      BookingStatus = booking_status;
      LastChangedAt = last_changed_at;
    }
}

define behavior for ZMS80_I_BOOKSUPL_M alias BookSupl
implementation in class zcl_bp_ms80_i_booksupl_m unique
persistent table zms80_booksupl_m
lock dependent by _Travel
authorization dependent by _Travel
etag master LastChangedAt
early numbering
{
  update;
  delete;
  field ( readonly ) TravelId, BookingId, BookingSupplementId, LastChangedAt;
  field ( mandatory ) Price, SupplementId;

  validation ValidateCurrencyCode on save { create; field CurrencyCode; }
  validation ValidateSupplement on save { create; field SupplementId; }
  validation ValidatePrice on save { create; field Price; }

  determination calculateTotalPrice on modify { create; field Price, CurrencyCode; }

  association _Travel;
  association _Booking;

  mapping for zms80_booksupl_m
    {
      TravelId            = travel_id;
      BookingId           = booking_id;
      BookingSupplementId = booking_supplement_id;
      SupplementId        = supplement_id;
      price               = Price;
      CurrencyCode        = currency_code;
      LastChangedAt       = last_changed_at;
    }
}